/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import components.StaffManagerTable;
import dao.NhanVienDAO;
import java.awt.Desktop;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author ASUS
 */
public class NhanVienForm extends javax.swing.JPanel {

    /**
     * Creates new form KhachHangForm
     */
    public NhanVienForm() {
        initComponents();
        refreshTable();
    }
    
    private void refreshTable(){
        StaffManagerTable newTable = new StaffManagerTable();
        DefaultTableModel newTableModel = (DefaultTableModel) newTable.getTableModel();

        TableNhanVien.setModel(newTableModel);
               
        repaint();
        revalidate();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        JtfTimKiem = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableNhanVien = new javax.swing.JTable();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setText("Thêm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 17, -1, -1));

        jButton2.setText("Xóa");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(142, 17, -1, -1));

        jButton3.setText("Sửa");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(248, 17, -1, -1));

        jButton4.setText("Xuất");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(353, 17, -1, -1));

        jButton5.setText("Chi tiết");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(473, 17, -1, -1));
        jPanel1.add(JtfTimKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(611, 18, 161, -1));

        jButton6.setText("Tìm kiếm");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(818, 17, -1, -1));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1137, -1));

        TableNhanVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã nhân viên", "Họ và tên", "Giới tính", "Số điện thoại", "Địa chỉ", "Email", "Chức vụ"
            }
        ));
        jScrollPane1.setViewportView(TableNhanVien);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 1030, 280));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        AddNhanVien akh=new AddNhanVien();
        akh.setLocationRelativeTo(null);
        akh.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        akh.setVisible(true);
        akh.addWindowListener(new java.awt.event.WindowAdapter() {
        @Override
        public void windowClosed(java.awt.event.WindowEvent e) {
            refreshTable();
        }
    });
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         int selectedRow = TableNhanVien.getSelectedRow();
    
    if (selectedRow == -1) {
        javax.swing.JOptionPane.showMessageDialog(this, "Vui lòng chọn nhân viên để xóa.");
        return;
    }

    String maKH = TableNhanVien.getValueAt(selectedRow, 0).toString(); // Cột 0 là Mã khách hàng

    int confirm = javax.swing.JOptionPane.showConfirmDialog(this,
            "Bạn có chắc muốn xóa nhân viên có mã: " + maKH + "?",
            "Xác nhận xóa",
            javax.swing.JOptionPane.YES_NO_OPTION);

    if (confirm == javax.swing.JOptionPane.YES_OPTION) {
        int success = NhanVienDAO.deleteNhanVien(maKH); // <-- Sửa ở đây: khai báo biến

        if (success > 0) {
            javax.swing.JOptionPane.showMessageDialog(this, "Xóa nhân viên thành công.");
            refreshTable();
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Xóa thất bại. Vui lòng thử lại.");
        }
    }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
                  int selectedRow = TableNhanVien.getSelectedRow();

    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Vui lòng chọn một nhân viên để sửa.");
        return;
    }

    String maKH = TableNhanVien.getValueAt(selectedRow, 0).toString(); // Lấy mã khách hàng từ dòng được chọn

    model.NhanVien kh = NhanVienDAO.getNhanVien(maKH);// Lấy đối tượng khách hàng từ DB
    String makh=kh.getMaNhanVien();

    if (kh != null) {
        UpdateNhanVien updateForm = new UpdateNhanVien(makh); // Truyền đối tượng vào form cập nhật
        updateForm.setLocationRelativeTo(null);
        updateForm.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        updateForm.setVisible(true);

        updateForm.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent e) {
                refreshTable(); // Làm mới bảng khi form đóng
            }
        });
    } else {
        JOptionPane.showMessageDialog(this, "Không tìm thấy thông tin nhân viên.");
    }
    
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int selectedRow = TableNhanVien.getSelectedRow();

    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Vui lòng chọn một nhân viên để xem chi tiết.");
        return;
    }

    String maKH = TableNhanVien.getValueAt(selectedRow, 0).toString();

    model.NhanVien khang = NhanVienDAO.getNhanVien(maKH);
    String kh=khang.getMaNhanVien();

    if (kh != null) {
        DetailNhanVien chiTiet = new DetailNhanVien(kh);
        chiTiet.setLocationRelativeTo(null);
        chiTiet.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        chiTiet.setVisible(true);
    } else {
        JOptionPane.showMessageDialog(this, "Không tìm thấy thông tin nhân viên.");
    }
    }//GEN-LAST:event_jButton5ActionPerformed

     public void openFile(String file) {
        try {
            File path = new File(file);
            Desktop.getDesktop().open(path);
        } catch (IOException e) {
            System.out.println(e);
        }
    }

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
    try {
    JFileChooser jFileChooser = new JFileChooser();
    jFileChooser.setDialogTitle("Chọn nơi lưu file Excel");
    jFileChooser.setSelectedFile(new File("DanhSachNhanVien.xlsx"));
    int userSelection = jFileChooser.showSaveDialog(this);
    if (userSelection == JFileChooser.APPROVE_OPTION) {
        File saveFile = jFileChooser.getSelectedFile();
        if (!saveFile.toString().toLowerCase().endsWith(".xlsx")) {
            saveFile = new File(saveFile.toString() + ".xlsx");
        }

        Workbook wb = new XSSFWorkbook();
        Sheet sheet = wb.createSheet("Danh sách nhân viên");

        // Tạo dòng tiêu đề (header)
        Row rowCol = sheet.createRow(0);
        for (int i = 0; i < TableNhanVien.getColumnCount(); i++) {
            Cell cell = rowCol.createCell(i);
            cell.setCellValue(TableNhanVien.getColumnName(i));
        }

        // Ghi dữ liệu nhân viên
        for (int j = 0; j < TableNhanVien.getRowCount(); j++) {
            Row row = sheet.createRow(j + 1);
            for (int k = 0; k < TableNhanVien.getColumnCount(); k++) {
                Cell cell = row.createCell(k);
                Object value = TableNhanVien.getValueAt(j, k);
                if (value != null) {
                    cell.setCellValue(value.toString());
                }
            }
        }

        // Ghi workbook ra file
        try (FileOutputStream out = new FileOutputStream(saveFile)) {
            wb.write(out);
        }
        wb.close();

        // Mở file sau khi lưu
        openFile(saveFile.toString());
    }
} catch (Exception e) {
    e.printStackTrace();
}
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        String keyword = JtfTimKiem.getText().trim().toLowerCase();
    
        DefaultTableModel model = (DefaultTableModel) TableNhanVien.getModel();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        TableNhanVien.setRowSorter(sorter);

        if (keyword.length() == 0) {
            sorter.setRowFilter(null); // hiện tất cả
        } else {
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + keyword, 1)); // tìm trong cột "Họ và tên"
        }
    }//GEN-LAST:event_jButton6ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField JtfTimKiem;
    private javax.swing.JTable TableNhanVien;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
